{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juan.villegas.munoz\\\\OneDrive - Accenture\\\\Desktop\\\\React\\\\05-hook-app\\\\src\\\\components\\\\01-useState\\\\02-useEffect\\\\FormWithCustomHook.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"./effects.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const FormWithCustomHooks = () => {\n  _s();\n\n  //creamos un formulario con los objetos nombre y email\n  const [formState, setFormState] = useState({\n    name: \"\",\n    email: \"\"\n  }); //desestructuramos el nombre y el email\n\n  const {\n    name,\n    email\n  } = formState;\n\n  const handleInputChange = _ref => {\n    let {\n      target\n    } = _ref;\n    //vamos a hacer\n    setFormState({ //llamamos a todo el formulario por si hay propiedades que no cambian\n      ...formState,\n      //setFormState aqui tenemos lo que se escriba en el objeto input\n      [target.name]: target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"FormWithCustomHooks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        className: \"form-control\",\n        placeholder: \"Introduce tu nombre\",\n        autoComplete: \"off\",\n        value: name //se llama cada vez que se produce un cambio \n        ,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        className: \"form-control\",\n        placeholder: \"Introduce tu email\",\n        autoComplete: \"off\",\n        value: email //se llama cada vez que se produce un cambio \n        ,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        className: \"form-control\",\n        placeholder: \"Introduce tu password\",\n        autoComplete: \"off\",\n        value: password //se llama cada vez que se produce un cambio \n        ,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FormWithCustomHooks, \"4IJpRacYP4rRg0wo0bUFX3WMOQc=\");\n\n_c = FormWithCustomHooks;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormWithCustomHooks\");","map":{"version":3,"sources":["C:/Users/juan.villegas.munoz/OneDrive - Accenture/Desktop/React/05-hook-app/src/components/01-useState/02-useEffect/FormWithCustomHook.js"],"names":["React","useState","FormWithCustomHooks","formState","setFormState","name","email","handleInputChange","target","value","password"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,eAAP;;;AAGA,OAAO,MAAMC,mBAAmB,GAAG,MAAM;AAAA;;AAGtC;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC;AAE1CI,IAAAA,IAAI,EAAC,EAFqC;AAG1CC,IAAAA,KAAK,EAAC;AAHoC,GAAD,CAA1C,CAJsC,CAUvC;;AACA,QAAM;AAACD,IAAAA,IAAD;AAAMC,IAAAA;AAAN,MAAeH,SAArB;;AAEA,QAAMI,iBAAiB,GAAG,QAAa;AAAA,QAAZ;AAACC,MAAAA;AAAD,KAAY;AACrC;AACAJ,IAAAA,YAAY,CAAC,EACX;AACA,SAAGD,SAFQ;AAGX;AACA,OAACK,MAAM,CAACH,IAAR,GAAeG,MAAM,CAACC;AAJX,KAAD,CAAZ;AAOD,GATD;;AAYA,sBACE;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACE;AACA,QAAA,IAAI,EAAC,MADL;AAEA,QAAA,IAAI,EAAC,MAFL;AAGA,QAAA,SAAS,EAAC,cAHV;AAIA,QAAA,WAAW,EAAC,qBAJZ;AAKA,QAAA,YAAY,EAAC,KALb;AAMA,QAAA,KAAK,EAAEJ,IANP,CAOA;AAPA;AAQA,QAAA,QAAQ,EAAGE;AARX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHA,eAkBA;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACE;AACA,QAAA,IAAI,EAAC,MADL;AAEA,QAAA,IAAI,EAAC,OAFL;AAGA,QAAA,SAAS,EAAC,cAHV;AAIA,QAAA,WAAW,EAAC,oBAJZ;AAKA,QAAA,YAAY,EAAC,KALb;AAMA,QAAA,KAAK,EAAED,KANP,CAOA;AAPA;AAQA,QAAA,QAAQ,EAAGC;AARX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAlBA,eAgCA;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACE;AACA,QAAA,IAAI,EAAC,UADL;AAEA,QAAA,IAAI,EAAC,UAFL;AAGA,QAAA,SAAS,EAAC,cAHV;AAIA,QAAA,WAAW,EAAC,uBAJZ;AAKA,QAAA,YAAY,EAAC,KALb;AAMA,QAAA,KAAK,EAAEG,QANP,CAOA;AAPA;AAQA,QAAA,QAAQ,EAAGH;AARX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAhCA;AAAA,kBADF;AAgDD,CAzEM;;GAAML,mB;;KAAAA,mB","sourcesContent":["import React, { useState } from 'react';\r\nimport \"./effects.css\";\r\n\r\n\r\nexport const FormWithCustomHooks = () => {\r\n\r\n\r\n   //creamos un formulario con los objetos nombre y email\r\n   const [formState, setFormState] = useState({\r\n\r\n    name:\"\",\r\n    email:\"\",\r\n  });\r\n\r\n  //desestructuramos el nombre y el email\r\n  const {name,email} = formState;\r\n\r\n  const handleInputChange = ({target}) =>{\r\n    //vamos a hacer\r\n    setFormState({\r\n      //llamamos a todo el formulario por si hay propiedades que no cambian\r\n      ...formState,\r\n      //setFormState aqui tenemos lo que se escriba en el objeto input\r\n      [target.name]: target.value\r\n       \r\n    });\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n    <h1>FormWithCustomHooks</h1>\r\n    <hr />\r\n    <div className='form-group'>\r\n      <input \r\n      type=\"text\"\r\n      name='name'\r\n      className='form-control'\r\n      placeholder='Introduce tu nombre'\r\n      autoComplete='off'\r\n      value={name}\r\n      //se llama cada vez que se produce un cambio \r\n      onChange={ handleInputChange }\r\n      />\r\n\r\n    </div>\r\n\r\n\r\n    <div className='form-group'>\r\n      <input \r\n      type=\"text\"\r\n      name='email'\r\n      className='form-control'\r\n      placeholder='Introduce tu email'\r\n      autoComplete='off'\r\n      value={email}\r\n      //se llama cada vez que se produce un cambio \r\n      onChange={ handleInputChange }\r\n      />\r\n\r\n    </div>\r\n   \r\n    <div className='form-group'>\r\n      <input \r\n      type=\"password\"\r\n      name='password'\r\n      className='form-control'\r\n      placeholder='Introduce tu password'\r\n      autoComplete='off'\r\n      value={password}\r\n      //se llama cada vez que se produce un cambio \r\n      onChange={ handleInputChange }\r\n      />\r\n\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}