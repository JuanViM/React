{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juan.villegas.munoz\\\\OneDrive - Accenture\\\\Desktop\\\\React\\\\05-hook-app\\\\src\\\\components\\\\01-useState\\\\CounterApp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"./counter.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CounterApp = () => {\n  _s();\n\n  const [state, setState] = useState({\n    counter1: 10,\n    counter2: 20,\n    counter3: 30,\n    counter4: 40\n  }); //asi desestructuramos un objeto y lo guardamos en als variables counter1 y 2\n\n  const {\n    counter1,\n    counter2\n  } = state;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Counter1 = \", counter1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Counter2 = \", counter2]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Counter3 = \", counter3]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Counter4 = \", counter4]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => {\n        setState({ ...state,\n          //el operador spread(...) extrae todas las propiedades de state\n          counter1: counter1 + 1 //aqui unicamente modificamos el counter1 de todas las propiedades del spread\n\n        });\n      },\n      children: \"+1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CounterApp, \"qRF7Mxgu6tMqHqbKKviVCkG1g8I=\");\n\n_c = CounterApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"CounterApp\");","map":{"version":3,"sources":["C:/Users/juan.villegas.munoz/OneDrive - Accenture/Desktop/React/05-hook-app/src/components/01-useState/CounterApp.js"],"names":["React","useState","CounterApp","state","setState","counter1","counter2","counter3","counter4"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,eAAP;;;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAE5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC;AAC/BI,IAAAA,QAAQ,EAAE,EADqB;AAE/BC,IAAAA,QAAQ,EAAE,EAFqB;AAG/BC,IAAAA,QAAQ,EAAE,EAHqB;AAI/BC,IAAAA,QAAQ,EAAE;AAJqB,GAAD,CAAlC,CAF4B,CAS5B;;AACA,QAAM;AAACH,IAAAA,QAAD;AAAUC,IAAAA;AAAV,MAAsBH,KAA5B;AAEF,sBACE;AAAA,4BACA;AAAA,gCAAgBE,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA,gCAAgBC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAA,gCAAgBC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHA,eAIA;AAAA,gCAAgBC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,YAJA,eAMA;AAAA;AAAA;AAAA;AAAA,YANA,eAOA;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AACA,MAAA,OAAO,EAAE,MAAM;AACbJ,QAAAA,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AAAU;AACnBE,UAAAA,QAAQ,EAAEA,QAAQ,GAAE,CADX,CACa;;AADb,SAAD,CAAR;AAGD,OALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPA;AAAA,kBADF;AAgBD,CA5BM;;GAAMH,U;;KAAAA,U","sourcesContent":["import React, { useState } from 'react';\r\nimport \"./counter.css\";\r\n\r\nexport const CounterApp = () => {\r\n\r\n    const [state, setState] = useState({\r\n        counter1: 10,\r\n        counter2: 20,\r\n        counter3: 30,\r\n        counter4: 40,\r\n    })\r\n\r\n    //asi desestructuramos un objeto y lo guardamos en als variables counter1 y 2\r\n    const {counter1,counter2} = state;\r\n  \r\n  return (\r\n    <>\r\n    <h1>Counter1 = {counter1}</h1>\r\n    <h1>Counter2 = {counter2}</h1>\r\n    <h1>Counter3 = {counter3}</h1>\r\n    <h1>Counter4 = {counter4}</h1>\r\n    \r\n    <hr />\r\n    <button className='btn btn-primary'\r\n    onClick={() => {\r\n      setState({...state,//el operador spread(...) extrae todas las propiedades de state\r\n      counter1: counter1 +1,//aqui unicamente modificamos el counter1 de todas las propiedades del spread\r\n    }); \r\n    }}>+1</button>\r\n    </>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}