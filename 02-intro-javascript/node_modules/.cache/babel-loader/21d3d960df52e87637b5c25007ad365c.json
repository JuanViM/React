{"ast":null,"code":"import { getHeroesById, getHeroesByOwner } from \"./bases/08-impo-expor\"; // const promesa = new Promise(( resolve,reject ) => {\n//     setTimeout(() => {\n//         const heroes = getHeroesById(2);\n//         resolve(heroes);\n//     },2000)\n// });\n// promesa.then((heroes) => {\n//    let heroe = heroes;\n//     return heroe;\n// });\n// console.log(heroe);\n//esta funcion recoge un id y retorna una promesa\n\nconst getHeroesByIdAsyn = id => {\n  return new Promise((resolve, reject) => {\n    // espera 2 s para realizar la siguiente accion\n    setTimeout(() => {\n      //guardamos en heroes el heroe que retorna la funcion siguiente por el id\n      const heroes = getHeroesById(id); //si heroes esta relleno devuelve el promise resuelto con el parametro heroes\n\n      if (heroes) {\n        resolve(heroes); //sino devuelve el catch del error de la promise\n      } else {\n        reject(\"error al encontrar el heroe\");\n      }\n    }, 2000);\n  });\n}; //llamamos a la funcion y le pasamos el parametro id \n\n\ngetHeroesByIdAsyn(1) //llamamos al then por si la promise tiene exito que nos retorne el heroe \n.then(heroe => console.log(\"El heroe es \", heroe)) //llamamos al catch y en caso e que de error nos llamara al catch cogiendonos el mensaje de error especificado\n.catch(err => console.warn(err)); //podriamos refactirizar codigo y hacerlo de la siguiente manera\n\ngetHeroesByIdAsyn(2).then(console.log).catch(console.warn);","map":{"version":3,"sources":["C:/Users/juan.villegas.munoz/OneDrive - Accenture/Desktop/React/02-intro-javascript/src/index.js"],"names":["getHeroesById","getHeroesByOwner","getHeroesByIdAsyn","id","Promise","resolve","reject","setTimeout","heroes","then","heroe","console","log","catch","err","warn"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,gBAAxB,QAAgD,uBAAhD,C,CAGA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;;AACA,MAAMC,iBAAiB,GAAIC,EAAD,IAAQ;AAC9B,SAAO,IAAIC,OAAJ,CAAY,CAAEC,OAAF,EAAUC,MAAV,KAAsB;AACrC;AACAC,IAAAA,UAAU,CAAC,MAAM;AACb;AACA,YAAMC,MAAM,GAAGR,aAAa,CAACG,EAAD,CAA5B,CAFa,CAGb;;AACA,UAAIK,MAAJ,EAAY;AACRH,QAAAA,OAAO,CAACG,MAAD,CAAP,CADQ,CAER;AACH,OAHD,MAGK;AACDF,QAAAA,MAAM,CAAC,6BAAD,CAAN;AACH;AAEJ,KAXS,EAWR,IAXQ,CAAV;AAYH,GAdM,CAAP;AAeH,CAhBD,C,CAkBA;;;AACAJ,iBAAiB,CAAC,CAAD,CAAjB,CACA;AADA,CAECO,IAFD,CAEOC,KAAD,IACFC,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA6BF,KAA7B,CAHJ,EAII;AAJJ,CAKCG,KALD,CAKOC,GAAG,IAAIH,OAAO,CAACI,IAAR,CAAaD,GAAb,CALd,E,CAOA;;AAEAZ,iBAAiB,CAAC,CAAD,CAAjB,CACCO,IADD,CACME,OAAO,CAACC,GADd,EAEKC,KAFL,CAEWF,OAAO,CAACI,IAFnB","sourcesContent":["import { getHeroesById, getHeroesByOwner } from \"./bases/08-impo-expor\";\r\n\r\n\r\n// const promesa = new Promise(( resolve,reject ) => {\r\n//     setTimeout(() => {\r\n//         const heroes = getHeroesById(2);\r\n//         resolve(heroes);\r\n//     },2000)\r\n// });\r\n\r\n\r\n// promesa.then((heroes) => {\r\n//    let heroe = heroes;\r\n//     return heroe;\r\n// });\r\n\r\n// console.log(heroe);\r\n\r\n//esta funcion recoge un id y retorna una promesa\r\nconst getHeroesByIdAsyn = (id) => {\r\n    return new Promise(( resolve,reject ) => {\r\n        // espera 2 s para realizar la siguiente accion\r\n        setTimeout(() => {\r\n            //guardamos en heroes el heroe que retorna la funcion siguiente por el id\r\n            const heroes = getHeroesById(id);\r\n            //si heroes esta relleno devuelve el promise resuelto con el parametro heroes\r\n            if (heroes) {\r\n                resolve(heroes);\r\n                //sino devuelve el catch del error de la promise\r\n            }else{\r\n                reject(\"error al encontrar el heroe\");\r\n            }\r\n            \r\n        },2000)\r\n    });\r\n};\r\n\r\n//llamamos a la funcion y le pasamos el parametro id \r\ngetHeroesByIdAsyn(1)\r\n//llamamos al then por si la promise tiene exito que nos retorne el heroe \r\n.then((heroe) =>\r\n    console.log(\"El heroe es \" , heroe))\r\n    //llamamos al catch y en caso e que de error nos llamara al catch cogiendonos el mensaje de error especificado\r\n.catch(err => console.warn(err))\r\n\r\n//podriamos refactirizar codigo y hacerlo de la siguiente manera\r\n\r\ngetHeroesByIdAsyn(2)\r\n.then(console.log)\r\n    .catch(console.warn)"]},"metadata":{},"sourceType":"module"}